ZLOTO:

zmienna prachowująca: Gracz.gold
wymagana w: 
    1. MapScreen (do wyświetlania ilosci złota zgromadzoengo przez gracza)
        lblGold (wyświetlany na stage02 w MapScreen)        
        status lbl Gold aktualizowany w MapScreen.Show()

ZAMEK:
    Klasa: Castle.java
    Obiekty zamków definiowane są w obiekcie klasy MapScreen.generujPlansze() 
    Sprawdzenie czy któryś gracz nie nadepnął na zamke następuje w:
        Bohater.checkCastle();       
    Zdrowie zamku odnawia się co turę ogólną w metodzie:
        MapScreen.SprawdzCzyKoniecTuryOgolnej.OdnowZdrowieZamkow()

SRZYNIA ZE SKARBEM:
    Klasa: TresureBox.java

    Przykładowa skrzynia ze skarbem dodana w:
    MapScreen.generujPlansze()
    Nadepnięcie na skrzynie zostaje sprawdzone w metodzie
        Bohater.checkTresureBox();

MAPA:
    

BOHATER:
        Sprawdzenie czy bohater może walczyć z zamkiem lub innym bohaterem następuje
    w Bohater.definiujPrzyciski()
        Generowanie bohaterów odbywa się w klasie NewGame wg. ustawień z gracza
    dokonanych w NewGameScreen
        Referencje obiektów utworzonych Bohaterow zapisane zostają w ArrayList
    Gracze.Bohaterowie<>
    Dodanie referencji ww Bohaterow następuje w obiekcie klasy 
    MapScreen.generujGraczy()

DOSWIADCZNIE BOHATERA
        Doświadczenie zwiększa się po zabiciu moba lub bohatera.
    Zwiększenie doświadczenia bohatera następuje:
    1. w metodzie Fight.getObrazenia(...)


KONIEC GRY:
    Sprawdzenie czy nastąpił koniec gry dla Gracza następuje w:
    MapScreen.KoniecTuryClick();
    Kolejno sprawdzane są:
        - Czy gracz posiada zamek
        - jeśli nie - zaczyna się odliczanie 5 tur
        - po 5 turach następuje nadanie graczowi statusu (Gracz.java) GameOver
        - Następuje wyrzucenie wszystkich bohaterów gracza z planszy.
        - Gracz pomijany jest przy kolejnych turach.

SCHMAT RUCHU:
    1. Przyciski ruchu/ataku zdefiniowane są w klasie Assets. 
    Ich instacncje są tworzone w konstruktorze klasy Assets.
    Każdy przycisk ma dodany interfejs ClickListner. 
    Niewidzialne przyciski dodawane są do Stage01 w obiekcie MapScreen w 
    metodzie MapScreen.dodajDoStage01()

    2. Po kliknięciu w przycisk atrybut BOOL setKlikniety przycisku jest 
    ustawiany na TRUE.
    
    3. Po kliknięciu na bohatera wywołana zostaje metoda 
    Bohater.definiujPrzyciski() która sprawdza sąsiadujące z obiektem Bohatera
    pola na mapie i w zależności od sytuacji włącza przyciski ataku lub ruchu 
    ustawiająci ich pozycję względem bohatera.
    
    4. Po włączeniu przycisków (status visible przycisku TRUE) gra oczekuje na
    kliknięcie przycisku. Sprawdzenie czy przycisk został kliknięty odbywa się
    w metodzie Bohater.draw().
    Kiedy stwierdzone zostaje że atrybut setKlikniety przycisku jest TRUE
    następuje wywołanie metody dla każdego przycisku:
        - sprawdzPrzyciskNorth/South/West ... itp ...()
        - sprawdzPrzyciskAtcNorth/South/West ... itp ..()
    W każdej z tych metod wyołąne zostają odpowiednio metody ruchu lub ataku.

RUCH (nowe wersja)

PASEK ENERGII BOHATERA
    Kod odpowiedzialny za aktualizacja paska jest w Bohater.aktualizujTeksture().
    Metoda ta wywoływana jest w Bohater.draw() tylko raz (podczas tworzenia
    bohatera) oraz w Fight.getObrazenia() za każdym razem gdy następuje atak
    bohatera.        
    
GRACZ
    Ikona gracza który ma aktualnie turę: 
    Definicja i pierwsze wywołanie następuje w konstruktorze MapScreen
    Aktualizacja kolory (zmiana aktualnego gracza) następuje w 
    MapScreen.KoniecTury
    Tekstura pobierana jest z Gracz.GetTeksturaIkonaGracza()

ZAMEK
    Tworzenie zamku:
        Tworzenie zamków i dodanie ich do planszy następuje w:
    MapScreen.generujPlansze() poprzez wywołanie metody
    MapScreen.generujZamki().
    W ww metodzie następuje utworzenie obiektu klasy zamek, po czym referencja
    do obiektu dodana zostaje do odpowiedniego obiektu pole w obikecie klasy 
    Mapa. Obiket zamku dodany zostaje także do stage01 w MapScreen.

    Ikona zamku:
        Utworzenie ikony zamku następuje w Konstruktorze klasy Castle(); poprzez
    wywołanie metody Castle.rysujIkoneZamku();
        Zmiana ikony zamku (zamek zmienia właściciela) następuje poprzez 
    wywołanie metody Castle.aktualizujIkoneZamku().
    Metoda ta wywołana zostaje w Bohater.CheckCastle()

NOWY BOHATER
        Dodanie i wygenerowanie nowego bohatera następuje w metodach obiektu
    klasy NewBohaterScreen().
    Metody ww. obiektu korzystają z metod udostepnionych w klasie statycznej
    NewGame().

MOB
        Obiekt moba reprezentuje klasa Mob().
    Tymczasowe obiekty mobów tworzone są w moetodzie MapScreen.generujPlansze()
